@using Microsoft.AspNetCore.Authorization
@using WeddingSite.Client.Models;
@using WeddingSite.Client.Services.Abstractions
@using WeddingSite.Contracts.DTOs
@inject IDataService DataService
@attribute [Authorize]
@page "/rsvp"

@inject AuthenticationStateProvider AuthenticationStateProvider

<h3 class="text-center">Rsvp</h3>

@foreach(var guest in _guests)
{
    <RsvpComponent Name="@guest.Name" />
    <br />
}


@code {
    private RsvpModel _model = new RsvpModel();

    private List<GuestDto> _guests = new List<GuestDto>();
    private string _debugText = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        await GetClaimsPrincipalData();
        await base.OnParametersSetAsync();
    }

    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var guestIds = user.Claims.Where(c => c.Type == "guests").Select(c => c.Value).ToList();

        foreach (var id in guestIds)
        {
            var guestDto = await DataService.GetGuestAsync(id);
            
            if (guestDto is null) continue;
            
            _guests.Add(guestDto);
        }
    }
}
